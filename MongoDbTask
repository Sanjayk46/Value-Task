--create database
use MongoDBTask

--create Collection
db.createCollection('taskCollection')

--view Collection
show collections

--insertData
db.taskCollection.insertMany([{"name":"sanjay","email":"ajay123@gmail.com","address":"chennai"},{"name":"kumar","email":"kumar345@gmail.com","address":"bangalore"}])

-->findOne()
db.taskCollection.findOne({"name":"kumar"})
result:
{
  "_id": {
    "$oid": "6757093bf1c3dd09eedde44d"
  },
  "name": "kumar",
  "email": "kumar345@gmail.com",
  "address": "bangalore"
}
-->find()
db.taskCollection.find()
result:
{
  "_id": {
    "$oid": "6757093bf1c3dd09eedde44c"
  },
  "name": "sanjay",
  "email": "ajay123@gmail.com",
  "address": "chennai"
},
{
  "_id": {
    "$oid": "6757093bf1c3dd09eedde44d"
  },
  "name": "kumar",
  "email": "kumar345@gmail.com",
  "address": "bangalore"
}


aggregation:
db.products.insertMany([
  { name: "Mobile", price: 30000.00, description: "Mobile in looks good" },
  { name: "laptop", price: 35000.00, description: "Laptop is very expensive" },
  { name: "Tablet", price: 40000.00, description: "Tablet condition is good" }
]);

db.orders.insertMany([
  {
    customerId: ObjectId("6757093bf1c3dd09eedde44c"), // Replace with actual customer ID
    orderDate: new Date(), // Fixed field name
    totalAmount: 40000, // Numeric value for totalAmount
    products: [
      { product_id: ObjectId("67571199f1c3dd09eedde451"), quantity: 1 },
      { product_id: ObjectId("67571199f1c3dd09eedde452"), quantity: 2 }
    ]
  },
  {
    customerId: ObjectId("67570eebf1c3dd09eedde450"), // Replace with actual customer ID
    orderDate: new Date(), // Fixed field name
    totalAmount: 40000, // Numeric value for totalAmount
    products: [
      { product_id: ObjectId("67571199f1c3dd09eedde451"), quantity: 1 },
      { product_id: ObjectId("67571199f1c3dd09eedde453"), quantity: 2 }
    ]
  }
]);


1.match
db.taskCollection.aggregate([
  {
    $match: {
      address: "bangalore"
    }
  }
]);
result :
[
  {
    "_id": ObjectId("6757093bf1c3dd09eedde44d"),
    "name": "kumar",
    "email": "kumar345@gmail.com",
    "address": "bangalore"
  }
]
2.GroupBy Address :
db.taskCollection.aggregate([
  {
    $group: {
      _id: "$address",
      count: { $sum: 1 }
    }
  }
]);
3.sort
db.taskCollection.aggregate([
  {
    $sort: {
      name: 1
    }
  }
]);
result:
[
  { "name": "kumar", "email": "kumar345@gmail.com", "address": "bangalore" },
  { "name": "sanjay", "email": "ajay123@gmail.com", "address": "chennai" }
]

4.limit 
db.taskCollection.aggregate([
  {
    $lookup: {
      from: "products", // Target collection
      localField: "productId", // Field in taskCollection
      foreignField: "_id", // Field in products
      as: "productDetails" // Output array field
    }
  },
  {
    $project: {
      _id: 0, // Exclude `_id`
      name: 1, // Include name
      email: 1, // Include email
      address: 1, // Include address
      "productDetails.name": 1, // Include product name
      "productDetails.price": 1 // Include product price
    }
  },
  {
    $limit: 1 // Limit the result to only 1 document
  }
]);
result :L
[
  {
    "name": "sanjay",
    "email": "ajay123@gmail.com",
    "address": "chennai",
    "productDetails": [
      { "name": "Mobile", "price": 30000 }
    ]
  }
]

5.Project:
db.taskCollection.aggregate([
  {
    $lookup: {
      from: "products", // Target collection
      localField: "productId", // Field in taskCollection
      foreignField: "_id", // Field in products
      as: "productDetails" // Output array field
    }
  },
  {
    $project: {
      _id: 0, // Exclude `_id`
      name: 1, // Include name
      email: 1, // Include email
      address: 1, // Include address
      "productDetails.name": 1, 
      "productDetails.price": 1
    }
  }
]);
result :
[
  {
    "name": "sanjay",
    "email": "ajay123@gmail.com",
    "address": "chennai",
    "productDetails": [
      { "name": "Mobile", "price": 30000 }
    ]
  },
  {
    "name": "kumar",
    "email": "kumar345@gmail.com",
    "address": "bangalore",
    "productDetails": [
      { "name": "Laptop", "price": 50000 }
    ]
  }
]


6.Lookup :
db.taskCollection.aggregate([
  {
    $lookup: {
      from: "products", 
      localField: "productId", 
      foreignField: "_id", 
      as: "productDetails"     
}
  }
]);


